{"version":3,"file":"static/js/514.780b4c82.chunk.js","mappings":"qKAsCA,EAjCuB,SAAH,GAAwB,IAAlBA,EAAU,EAAVA,WACxB,OACE,iBAAKC,UAAU,aAAY,WAEzB,iBAAKA,UAAU,oBAAmB,WAChC,gBAAKA,UAAU,YACf,gBAAKA,UAAU,aAGjB,iBAAKA,UAAU,sBAAqB,WAElC,cAAGA,UAAU,uBAAsB,SAAED,EAAWE,QAEhD,eAAID,UAAU,oBAAmB,SAAED,EAAWG,SAE9C,cAAGF,UAAU,uBAAsB,SAAED,EAAWI,WAEhD,gBAAKH,UAAU,mBAAkB,SAC9BD,EAAWK,SACVL,EAAWK,QAAQC,KAAI,SAACC,EAASC,GAAK,OACpC,uBAAgBD,GAARC,EAAoB,WAM1C,E,UC/BIC,EAAU,EAERC,EAAsB,SAACR,EAAMC,EAAOC,EAASC,GAAO,MAAM,CAC9DM,GAAIF,IACJP,KAAAA,EACAC,MAAAA,EACAC,QAAAA,EACAC,QAAAA,EACD,EAEYL,EAAa,CACxBY,KAAM,CACJF,EACE,sBACA,qBACA,+BACA,CACE,gBACA,wKACA,iIACA,uIAGJA,EACE,wBACA,oCACA,YACA,CACE,mKACA,qEACA,kFAGJA,EACE,uBACA,kCACA,kDACA,CACE,4FACA,eACA,6FACA,iGAGJA,EACE,uBACA,8BACA,kDACA,CACE,+DACA,gEACA,yEACA,iFAING,UAAW,CACTH,EACE,wBACA,iDACA,oCAEFA,EACE,wBACA,gDACA,mDACA,CACE,sCACA,2BACA,iFClCR,EA3Be,WACb,OACE,oBAAST,UAAU,SAAQ,UACzB,UAACa,EAAA,EAAY,CAACb,UAAU,oBAAmB,WAEzC,wBAAI,gBAEJ,iBAAKA,UAAU,sBAAqB,WAClC,iBAAKA,UAAU,kBAAiB,WAC9B,wBAAI,wBACHD,EAAWY,KAAKN,KAAI,SAACC,GAAO,OAC3B,SAAC,EAAc,CAACP,WAAYO,GAAcA,EAAQI,GAAM,QAI5D,iBAAKV,UAAU,kBAAiB,WAC9B,wBAAI,kBACHD,EAAWa,UAAUP,KAAI,SAACC,GAAO,OAChC,SAAC,EAAc,CAACP,WAAYO,GAAcA,EAAQI,GAAM,cAOtE,C,oECLA,EAvBqB,SAAH,GAAiC,IAA3BV,EAAS,EAATA,UAAWc,EAAQ,EAARA,SAE3BC,EAAU,kBAAoBf,GAAwB,IAC5D,OACE,iBAAKA,UAAWe,EAAQ,WACtB,iBAAKf,UAAU,wBAAuB,WAEpC,gBAAKA,UAAU,gBAEf,gBAAKA,UAAU,mBAEf,gBAAKA,UAAU,qBAGjB,gBAAKA,UAAU,sBAAqB,SAAEc,MAG5C,C","sources":["pages/Resume/components/ExperienceCard/ExperienceCard.jsx","config/db/experience.js","pages/Resume/Resume.jsx","shared/components/IDEContainer/IDEContainer.jsx"],"sourcesContent":["//React\r\nimport PropTypes from \"prop-types\";\r\n//Scss styling file\r\nimport \"./ExperienceCard.scss\";\r\n\r\nconst ExperienceCard = ({ experience }) => {\r\n  return (\r\n    <div className=\"experience\">\r\n      {/* Timeline shape */}\r\n      <div className=\"experience__shape\">\r\n        <div className=\"circle\"></div>\r\n        <div className=\"line\"></div>\r\n      </div>\r\n      {/* Experience content */}\r\n      <div className=\"experience__content\">\r\n        {/* Date */}\r\n        <p className=\"experience__subtitle\">{experience.date}</p>\r\n        {/* Title */}\r\n        <h3 className=\"experience__title\">{experience.title}</h3>\r\n        {/* Company */}\r\n        <p className=\"experience__subtitle\">{experience.company}</p>\r\n        {/* Description block */}\r\n        <div className=\"experience__body\">\r\n          {experience.details &&\r\n            experience.details.map((element, index) => (\r\n              <p key={index}>{element}</p>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//Props type validation\r\nExperienceCard.propTypes = {\r\n  experience: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ExperienceCard;\r\n","let idCount = 0;\r\n//Experience factory function\r\nconst experienceGenerator = (date, title, company, details) => ({\r\n  id: idCount++,\r\n  date,\r\n  title,\r\n  company,\r\n  details,\r\n});\r\n//Array of experience and education\r\nexport const experience = {\r\n  work: [\r\n    experienceGenerator(\r\n      \"Nov. 2022 - Present\",\r\n      \"Frontend Developer\",\r\n      \"Certified IT Consultants CIC\",\r\n      [\r\n        \"Achievements:\",\r\n        \"- Proposed & participated in the creation of a generic angular library that contains generic components, generic services, generic interceptors & generic directives.\",\r\n        \"This library can then be installed with all of it's dependencies on any new project, accordingly total project time is reduced\",\r\n        \"- Participated in the creation of a core project that includes all required packages to be later downloaded & used in new projects\",\r\n      ]\r\n    ),\r\n    experienceGenerator(\r\n      \"Nov. 2021 - Apr. 2022\",\r\n      \"Development of Fan Testing System\",\r\n      \"Freelance\",\r\n      [\r\n        \"Devloped and designed full control system for testing commercial/residential fans, the system aquire readings from sensors & evaluate based on IEC60879 standard\",\r\n        \"Technology: Arduino (GRBL firmware), MS SQL Server, .NET framework\",\r\n        \"Features: Test report, Database logging, Serial/ModBus interface and Printing\",\r\n      ]\r\n    ),\r\n    experienceGenerator(\r\n      \"Nov. 2017 - May 2019\",\r\n      \"Continuous Improvement Engineer\",\r\n      \"HETRONIC Division of Methode Electronics L.T.D.\",\r\n      [\r\n        \"Responsible for improving & easing testing process by upgrading testing to semi-automated\",\r\n        \"Achivements:\",\r\n        \"- Creating semi-automated testing JIGs for 50% of harnesses produced (Software Controlled)\",\r\n        \"- Eliminated wrong transmitter channel customer complaint by relying testing on item QR code\",\r\n      ]\r\n    ),\r\n    experienceGenerator(\r\n      \"Nov. 2017 - May 2019\",\r\n      \"Electronics Repair Engineer\",\r\n      \"HETRONIC Division of Methode Electronics L.T.D.\",\r\n      [\r\n        \"Participated in reducing incoming rejected boards by 50% by:\",\r\n        \"- Properly teaching operators how to use equipement correctly\",\r\n        \"- Improving testing JIGs/Fixtures to be easier to use and maintainable\",\r\n        \"- Communicating with suppliers to ensure no skip points occur at their ends\",\r\n      ]\r\n    ),\r\n  ],\r\n  education: [\r\n    experienceGenerator(\r\n      \"Apr. 2022 - Sep. 2022\",\r\n      \"Front-End & Cross-Platform Intensive Code Camp\",\r\n      \"Information Technology Institute\"\r\n    ),\r\n    experienceGenerator(\r\n      \"Sep. 2012 - Sep. 2017\",\r\n      \"B.Sc. in Electrical & Electronics Engineering\",\r\n      \"Higher Technological Institute (10th of Ramadan)\",\r\n      [\r\n        \"General Grade: Very Good (3.03 GPA)\",\r\n        \"Project Grade: Excellent\",\r\n        \"Graduation Project: Automatic Receiver Testing JIG for Hetronic MFS family\",\r\n      ]\r\n    ),\r\n  ],\r\n};\r\n","//Scss styling file\r\nimport \"./Resume.scss\";\r\n//Components\r\nimport ExperienceCard from \"./components/ExperienceCard/ExperienceCard\";\r\nimport IDEContainer from \"../../shared/components/IDEContainer/IDEContainer\";\r\n//Data\r\nimport { experience } from \"../../config/db/experience\";\r\n\r\nconst Resume = () => {\r\n  return (\r\n    <section className=\"resume\">\r\n      <IDEContainer className=\"resume__container\">\r\n        {/* Title */}\r\n        <h1>&lt;Resume /&gt;</h1>\r\n        {/* Work experience section */}\r\n        <div className=\"resume__experiences\">\r\n          <div className=\"resume__section\">\r\n            <h2>&lt;Work Experience /&gt;</h2>\r\n            {experience.work.map((element) => (\r\n              <ExperienceCard experience={element} key={element.id} />\r\n            ))}\r\n          </div>\r\n          {/* Education section */}\r\n          <div className=\"resume__section\">\r\n            <h2>&lt;Education /&gt;</h2>\r\n            {experience.education.map((element) => (\r\n              <ExperienceCard experience={element} key={element.id} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </IDEContainer>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Resume;\r\n","//React\r\nimport PropTypes from \"prop-types\";\r\n//Scss styling file\r\nimport \"./IDEContainer.scss\";\r\n\r\nconst IDEContainer = ({ className, children }) => {\r\n  //classes variable to pass classes externally\r\n  const classes = \"ide-container \" + (className ? className : \"\");\r\n  return (\r\n    <div className={classes}>\r\n      <div className=\"ide-container__header\">\r\n        {/* Red window circle */}\r\n        <div className=\"red-circle\"></div>\r\n        {/* Orange window circle */}\r\n        <div className=\"orange-circle\"></div>\r\n        {/* Green window circle */}\r\n        <div className=\"green-circle\"></div>\r\n      </div>\r\n      {/* Container content */}\r\n      <div className=\"ide-container__body\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n//Props type validation\r\nIDEContainer.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default IDEContainer;\r\n"],"names":["experience","className","date","title","company","details","map","element","index","idCount","experienceGenerator","id","work","education","IDEContainer","children","classes"],"sourceRoot":""}